[{"page_number": 2, "text": "pdf2table: A Method to Extract Table Information from\nPDF Files\nBurcuYildiz,KatharinaKaiser,andSilviaMiksch\nInstituteofSoftwareTechnology&InteractiveSystems\nViennaUniversityofTechnology,Vienna,Austria\n{yildiz, kaiser, silvia}@asgaard.tuwien.ac.at\nAbstract. Tablesareacommonstructuringelementinmanydocuments,suchas\nPDFfiles.Toreusesuchtables,appropriatemethodsneedtobedevelop,which\ncapture the structure and the content information. We have developed several\nheuristicswhichtogetherrecognizeanddecomposetablesinPDFfilesandstore\ntheextracteddatainastructureddataformat(XML)foreasierreuse.Addition-\nally, we implemented a prototype, which gives the user the ability of making\nadjustments on the extracted data. Our work shows that purely heuristic-based\napproachescanachievegoodresults,especiallyforlucidtables.\n1 Introduction\nThe amountof accessible data we are facing today makes it necessary to developef-\nficientInformationEngineeringconceptsandtoolsto better processand use the data.\nInformationEngineeringcomprisessucha widedimensionof sub-areasthatonecan-\nnotexpectthatasingleconceptortoolcanfittheneedsofall[1].Oneofthesesub-areas\nisthefieldofInformationExtraction(IE).IEisthetaskofextractingrelevantfactsfrom\ntextandrepresentingtheminsomeusefulform.Thedevelopmentofthisfieldwasinflu-\nencedandfosteredbyaseriesofMessageUnderstandingConferences(MUCs)starting\nin 1987 which served as a platform for evaluating different IE projects developedby\ndifferentsites[2,3].ThefieldofIEcanalsobesplitintosomesub-tasks.\nOnesub-taskisthetaskofTableExtraction(TE)whichisthesubjectofthispaper.\nThistaskisimportant,becausetablesareamongthemostcommonmeansofpresenting\nand structuring data with a high informationdensity. However,it is not an easy task,\nbecausetablescanbeofvaryingformats.Forexample,sometablescouldhavelinesin\nordertopointoutthecellboundaries,whereasotherscouldhaveonlywhitespacesto\nachieveatableview.Theonlythingeachtablewillcertainlyhaveiscontent.\nFurther,weconcentratedonlyonPDFfilesasinputfiles.Thisdataformatiswidely\nknownandused,becauseitallowsuserstocreatefilesthatlookthesameondifferent\noutputdevices,nomatterinwhichenvironmenttheywerecreated.\nExtractingdifferentkindsof data andinformationfromwhole PDF files is a field\nof research itself. Various tools were developed to support the extraction process. A\ncomparison[4] showedthat the toolwith the mostusefuloutputfor our purposewas\nthe pdftohtml1 tool developed by Gueorgui Ovtcharov and Rainer Dorsch. This tool\n1http://pdftohtml.sourceforge.net"}, {"page_number": 3, "text": "returnsall textelements (i.e., strings) in a PDF-file with their absolutecoordinatesin\nthe original file. Using this tool, our task became to extract table information from\nsemi-structuredtextfilesutilizingtheirabsolutecoordinates.\n2 Table Extraction\nTableExtraction(TE)isthetaskofdetectinganddecomposingtableinformationina\ndocument.Thistaskattractedtheattentionofresearchersbecausetablesareoneofthe\nmostusedelementstopresentandstructuredataandtheyshouldbeextractedforreuse.\nWhilehumanbeingscaneasilyrecognizeandunderstandtables,thingsaredifferent\nfor computers, because tables do not have any identifying characteristic in common.\nThey can contain delimiters ranging from graphical boundary lines to point out the\nboundariesandtheseparationbetweenrowsandcells,toonlywhitespacestoachievea\ntableview.Further,theycanvaryintermsofcontainingspanningrowsand/orcolumns.\nAnotherpointthatmakesTEharderisthattablescancontaindifferenttypesofcontent,\nsuch astext, figures,mathematicalformulas,etc. [5] We hadto take all theexplained\ndifficultiesintoaccountindevelopingourapproach.\nOurworkisbasedonthedatareturnedbythepdftohtmltool(referSection1).For\neach text chunk in the PDF file it returns a text element in XML with the following\nattributes:\n\u2013 top=verticaldistancefromthetopofthepage\n\u2013 left=horizontaldistancefromtheleftborderofthepage\n\u2013 width=widthofthetextchunk\n\u2013 height=heightofthetextchunk\n\u2013 font=thisattributedescribesthesize,family,andcolorofthetextchunk\nWerestrictedourworktoutilizeonlythesefiveattributesforextractingtableinfor-\nmation andnot, for example,graphicalcomponentslike lines, etc. After applyingthe\npdftohtmltool,we hadto extracttable informationfroman XML documentwith text\nelementsdescribingtheabsolutepositionofatextchunkinaPDFfile.\nWe have exploreddifferentkindsof tables accordingto their structure to develop\nseveralheuristics.Theseheuristicscanbegroupedintwomaincategories:(1)heuristics\nintendedtorecognizeatableand(2)heuristicsintendedtodecomposeatable.\nTableRecognition. Thistaskdealswiththeproblemofidentifyinga\u201dconstruct\u201dasa\ntable.Thelevelofdifficultyofthistaskdepends,amongothers,onthedocument\nin which the table is embedded.As we deal with an XML documentwhich does\nnotmark-uptables,wehavetoidentifyaportionoftextelementsasatableonlyby\nmeansoftheknowledgeoftheabsolutecoordinatesofthetextelements.\nTableDecomposition. Afterdetectingapartofafileasatable,thenextstepistode-\ncomposethetableasclosetotheoriginalaspossible.Thistaskincludesthecorrect\nidentificationofheaderelements,theirspanningbehavior(i.e.,howmanycolumns\norrowsarespanned),thecorrectassigningofdatacellstoheaderelements,andso\non."}, {"page_number": 4, "text": "3 Our Approach\nOurapproachisbasedonheuristics,whichwederivedfromcomparingdifferentkinds\noftablesaccordingtheircomposition.Wegroupedourheuristicsintasksoftablerecog-\nnitionandtabledecomposition.First,weexplainourpreprocessingandthentheheuris-\ntics.Allthealgorithmsarelistedwithabasicexplanation.Afterwards,wegiveacoher-\nentexample,whichillustratesallthedifferentsteps.\nToeasetheunderstandingofourheuristics,wedefinesomebasicterms,whichwill\nbeusedthroughoutthepaper.\n\u2013 Text:containsastringandfiveattributes(top,left,width,height,font)\n\u2013 Line:containstextobjectswhichareassumedtobeonthesamelineintheoriginal\nfile\n\u2013 Single-Line:lineobjectwithonlyonetextobject\n\u2013 Multi-Line:lineobjectwithmorethanonetextobject\n\u2013 Multi-LineBlock:setofcontinuousmulti-lineobjects\nBasically, we assume the inputdocumentas a single column document.By using\na user interface the user can actually tell the implemented prototype the number of\ncolumnsofthedocumenttoachievebetterresults.\n3.1 Preprocessing\nThe pdftohtml tool returns text chunks and their absolute coordinatesin the PDF file\ninthesameorderastheywereinsertedintotheoriginalfile.Becauseeachauthorcan\ninsertthetextintheordershe/hewants,youcannotrelyonlyontheorderingofthetext\nelementstomakedecisions.To avoidsuchuncertaintieswefirstsortalltextelements\naccordingtotheirtopvalues.\nAscii Sign Ascii Sign Ascii Sign\n048 0 050 2 052 4\n049 1 051 3 053 5\nFig.1.ExampleofatableinaPDFfile\nThe original ordering of the text elements in Fig. 1 can have several forms. One\npossibleorderingcouldbe:Ascii,Sign,Ascii,Sign,Ascii,Sign,048,0,050,2,andso\non.Dependingontheauthor,anotherorderingcouldbe:Ascii,048,049,Sign,0,1,and\nsoon.Ifwesortallthetextelementswithrespecttotheirtop-valueswecanbesurethat\nwealwaysgetthesameordering,nomatterhowtheauthorhasinsertedthetextchunks.\nForFig.1thesortedorderingis:Sign,Sign,Sign,Ascii,Ascii,Ascii,048,0,050,and\nsoon.\nAfterthissortingprocesswewanttoassigntextobjectsthatareonthesamelineto\nalineobject.OurheuristicforthistaskisdescribedinAlgorithm1."}, {"page_number": 5, "text": "Algorithm1.Mergetextelementsonthesamelinetolineobjects\nfor each Text t {\nLine pl = last Line in the Line list\nif (t.top or t.bottom lies between pl.top and pl.bottom) {\nadd t to pl;\nactualize values of pl.top and pl.bottom;\n} else {\ncreate new Line and add t to the new Line;\nset top and bottom values of the new Line;\nadd new Line to the Line list;\n}\n}\nAfterapplyingAlgorithm1,wehaveallthelinesinthePDFfileinourlineobject\nlist.Wecanstartwiththetablerecognitiontask.\n3.2 TableRecognition\nIn this task, we utilize the gainedinformationfromour pre-processingto identifythe\ntables in the document.Our basic assumption for recognizingtables is: \u201dTables must\nhave more than one column\u201d.This indicatesthat each multi-line objectcan be a data\nrowofatableandeachmulti-lineblockobjectcanactuallybeatable.Basedonthese\nassumptionswedescribeourtablerecognitionheuristicinAlgorithm2.\nAlgorithm2.Classifysingle-lineandmulti-lineobjectsanddetectmulti-lineblockobjects\nmulti-modus = false;\nfor each Line line {\nif (number of Text objects in line > 1) {\nmark line as Multi-Line;\nif (multi-modus == false) {\ncreate new Multi-Line Block;\nadd new Multi-Line Block to Multi-Line Block list;\nmulti-modus = true;\n} else {\nMulti-Line Block mlb = last added Multi-Line Block\nto the Multi-Line Block list;\nadd line to Lines in mlb;\n}\n} else\nif (number of Text objects in line == 1) {\nText t = the Text in line;\nMulti-Line Block mlb = last added Multi-Line Block\nto the Multi-Line Block list;\nif (t belongs to mlb)\nadd line to Line in mlb;\nelse // single-line\nmulti-modus = false;\n}\n}"}, {"page_number": 6, "text": "Afterthisfirstclassificationoflineobjectsassingle-lineandmulti-lineobjectsand\ndetecting multi-line block objects we have generated a heuristic to merge multi-line\nblockobjectsthatmaybelongtothesametable.We selectedathresholdvalueoffive\nandassume thatif thereare morethan fivesingle-lineobjectsbetweentwomulti-line\nblock objects, than these multi-line block objects represent two distinct tables. Algo-\nrithm3presentsthisheuristic.\nAlgorithm3.Mergemulti-lineblockobjectswhichmaybelongtothesametable\nfor each Multi-Line Block mlb {\np_mlb = previous Multi-Line Block in the Multi-Line Block list;\nn_mlb = next Multi-Line Block in the Multi-Line Block list;\nfor each Line between mlb and p_mlb\ntry to merge Line to mlb;\nif (number of Lines between mlb and p_mlb <=5 and mlb and\np_mlb on the same page) {\nmerge mlb and p_mlb;\n}\nfor each Line between mlb and n_mlb\ntry to merge Line to mlb;\nif (Line between mlb and n_mlb <=5 and mlb and\nn_mlb on the same page) {\nmerge mlb and n_mlb;\n}\n}\nAfterthemergingprocesswehaveallmulti-lineblockobjectsthatcanbeatable.\nWe are not taking multi-line block objects with less than two rows into account for\nfurtherprocessing.Thenextstepistodecomposetheremainingmulti-lineblockobjects\ntotables.\n3.3 TableDecomposition\nHavingallpossibletablesdetectedwecanconcentrateondecomposingtheinformation\nin these multi-line block objects. Due to the fact that each text element will be in (at\nleast)onecolumn,we simplifyourdecompositiontaskandtrytofindtheappropriate\ncolumnforeachtextelementinamulti-lineblockobject(referAlgorithm5).Westart\nwithnocolumnathand.Forthefirsttextelementtherewillbeanewcolumncreated.\nAfter that, for each textelement the boundariesof the text elementwill be compared\nwiththeexistingcolumns\u2019boundaries.Accordingtothat,ifatextelements\u2019horizontal\nboundaries fit into a columns\u2019 boundaries it will be added to this column, if not, a\nnew column will be created and the text element will be added into it. If more than\none text element in a line falls into the boundaries of a column the spanning will be\nincreased.Afteraddingatextelementtoacolumn,theboundaryvaluesofthecolumn\nareactualized.\nOurheuristicforthistaskisdescribedinAlgorithm4."}, {"page_number": 7, "text": "Algorithm4.Decomposethecolumnsofeachmulti-lineblockobject\nfor each Multi-Line Block mlb {\nfor each Line line in mlb {\nfor each Text t in line {\nfind appropriate column for t;\nif (found)\nadd t to cells in column;\nelse {\ncreate new column;\nadd column at the appropriate position in the column list;\n}\n}\n}\ncreate table with all these columns;\n}\nFindingtheappropriatecolumnforatextobjectrequiresaheuristicitself,whichis\ndescribedbyAlgorithm5.\nAlgorithm5.Assigntextelementtoacolumn\ninput: Text t\nfor each column c {\nif (t overlaps c or c overlaps t)\nreturn c;\nelse\nif (t in c or c in t)\nreturn c;\nelse\nreturn null;\n}\nAfter all these processes we have a list of columns which together compose the\ntables.Now,theonlythingtodoistomergecellswiththesamecontenttoonecellwith\nagreaterspanningvalue.\n3.4 AnExample\nInthefollowingwewillgiveanexampletoillustrateseveralstepsofourapproach.\nAssumethatwehaveasinputthePDFfilewithapagelikeinFig.2.Ofcourse,the\nPDFfilecontainsnotonlythetablebutalsotextparagraphs,footnotes,etc.,too.\nAfter gettingthe results fromthe pdftohtmltoolwe can go on with our approach.\nOur first step is to sort all the text elements in respectto their top attributes. Assume\nthatwehavealreadyidentifiedthetextelementsbeforethetableandletusbeginwith\nthetextelementsinthetable(referFig.3).\nInFig.3,afterthesortingprocesswehavethefollowingordering:\n\u201dMedianvalueamongfamilies\u201d,\u201dFamilieshavingstockholdings\u201d,\u201dwithholdings\u201d,\n\u201ddirectorindirect\u201d,\u201dFamily\u201d,\u201d(thousandsof1998dollars)\u201d,\u201dcharacteristic\u201d,\u201d1989\u201d,\n\u201d1992\u201d,\u201d1995\u201d,\u201d1998\u201d,\u201d1989\u201d,andsoon."}, {"page_number": 8, "text": "Fig.2.ExampleofacomplextableinaPDFfile\nNow, Algorithm 1 is applied to create the line objects. Based on the orderingthe\nfirsttextelementthatissavedinalineobjectis\u201dMedianvalueamongfamilies\u201d.Thus,\nanewlineobjectiscreatedandthetopandbottomvaluesareactualizedinrespectto\ntheaddedtextelement.Thenextoneis\u201dFamilieshavingstockholdings\u201dandwemust\nlookwhetherwecanputthistextinanexistinglineobjectornot.Thefirstdashedline\n(see Fig. 3) marks the bottom of the line object we just created. As you can see the\ncurrenttextelements\u2019topvalueisbetweenthetopandthebottomvalueofourfirstline\nobjectandthuscanbeaddedtothisline.Afteradding,thelineobjects\u2019topandbottom\nvaluesare actualized.This procedureis applieduntilall textobjectshave beenfound\nin a line object (the last text object in our example is \u201d1989\u201d). The text elements in\nthislineobjectarestillsortedaccordingtotheirtopvalues.Thisorderingisofnouse\nanymore,because we want to gain the text chunksthat semantically belong together.\nFor example, we want \u201dFamily\u201d and \u201dcharacteristic\u201d merged. Thus, we next sort the\ntext elements in the line object according to their left values. After that we have the\nwanted ordering,thus \u201dFamily characteristic\u201d,\u201dFamilies havingstock holdingsdirect\norindirect\u201d,andsoon(referFig.3)."}, {"page_number": 9, "text": "Fig.3.Illustratingtheorderinginwhichthetextelementsareaddedintolineobjects\nAfter building all line objects in this page we have to classify all line objects as\nsingle-lineobjectormulti-lineobject.Algorithm2markssuccessivemulti-lineobjects\nas multi-line block objects. Because we have no other multi-line block object in this\nexamplewedonothavetomergeanything(referAlgorithm3).\nThenextstepistocreatecolumnsandassignthetextobjectstotheircorresponding\ncolumns.ThisstepisdonebyAlgorithm4andAlgorithm5.Forourfirsttextobjectin\nthefirstlineobject(\u201dFamilycharacteristic\u201d)wehavetobuildanewcolumn.Forallthe\ntextobjectsinthelineobjectswehavetolookwhetherthereexistsacolumntowhich\nthattextobjectcanbeassigned.Ifso,wesimplyaddthetextobjecttothiscolumn.If\nnot,wecreateanewcolumnandaddthistextobjecttothenewone.Inbothcases,we\nactualizethecolumns\u2019horizontalboundariesaccordingtothenewaddedtextelement.\nAtextobjectcanbeassignedtoacolumnifoneofthefollowingfourpossibilities\nappears(referFig.4):\n1. Thetextispositionedcompletelywithinthehorizontalboundariesofthecolumn\n2. Leftborderofthetextispositionedinthehorizontalcolumnboundaries\n3. Rightborderofthetextispositionedinthehorizontalboundariesofthecolumn\n4. Thetextspansthehorizontalboundariesofthecolumn\nAfterthis procedurewe have a table consistingof morethanone column.Forthe\nfirst five columnsof our example in Fig. 2 we get the resulting columnspresentedin\nTable.1.\nFinally,wehavetoidentifyneighborcellswiththesamecontentandmergethem.\nIn our case the four cells with the content \u201dFamilies having stock holding direct or\nindirect\u201daremergedintoonesinglecellwithacolumnspanningoffour.Thesearethe\nmainstepsofourapproachtoextracttableinformationfromPDFfiles.\n3.5 Limitations\nBecause of the complexityof the task andthe used heuristics,which cannotcoverall\npossible table structures, one cannotassume that the approach always returnscorrect\nresults.Forexample,ourapproachcannotdistinguishbetweenhiddentables(i.e.,tables\nthat are not labeled as such in the original file) and real tables. Further, tables that"}, {"page_number": 10, "text": "Fig.4.Thefourpossibilitiesforassigningatextobjecttoacolumn\nTable1.ColumnsafterapplyingAlgorithm4.\nFamily Families Families Families Families\ncharacteristic having having having having\nstock stock stock stock\nholding holding holding holding\ndirector director director director\nindirect indirect indirect indirect\nNull 1989 1992 1995 1998\nAllFamilies 31.6 36.7 40.4 48.8\n...\n...\narepositionedverticallyonapagecannotbecaptured.Therearealsoseveralpossible\nerrors,forexample,textchunksthatdonotbelongtogetheraremerged,multi-lineblock\nobjectsthatbelongtogetherarenotmerged,datacellsareassignedtowrongcolumns,\nandsoforth.Itisalsopossiblethatareasthatarenottablesareidentifiedassuch.This\nisthecase,forexample,withbulletedlists,etc.\nToovercometheselimitationswealsoimplementedagraphicaluserinterfacewhich\ngives the user the ability of making adjustments on the extracted data. The user can\nmakeadjustmentsoncelllevel(e.g.deletecells,mergecells,editcontentofcell,etc.)\norontablelevel(e.g.deletetable,mergetables,delete/insertrowsorcolumns).\nThemainlimitationofthetoolisthatitisbasedontheresultsofthepdftohtmltool.\nIfthistoolreturnswronginformationornoinformationatall,ourapproachcannotbe\napplied.For example,PDF files sometimescontainonly the image of a table and not\ntext chunkswhich are inserted by an author. In such a case, the pdftohtml returns no\nuseful information. We stated this limitation as the main limitation, because the user\ncannotdoanythingaboutit.Thegraphicaluserinterfacewillnothelp,either."}, {"page_number": 11, "text": "3.6 Evaluation\nTheevaluationofanInformationExtractionSystemisanon-trivialissue.Therefore,we\ncansaythattheMUCs\u2019scoringprogramrepresentedanimportantfirststepintheright\ndirection[6].Theseconferencesservedasanevaluationplatformwheresystemsfrom\ndifferent sites were evaluated by using different measures. Over the years the recall\nandprecisionmeasuresestablishedthemselvesandarewidelyacceptedasameansfor\ngivingevidenceaboutasystem\u2019sperformance.Currently,someresearchgoesinthedi-\nrectionoffindingnewandpropermeasuresforevaluatingtable-processingapproaches\n[7].\nHowever,it is hardto predicthowgood a measurereflects the realsituation for a\ncurrentapproach.Our approach,for example,consists of severaliterative steps and a\nfailure in the first step would affect the end result to an unpredictable extent. But it\nwouldbeveryhardtoevaluatetheperformanceofeachheuristicseparately.Thus,we\ndecidedtoevaluatetheendresultusingthementionedmostestablishedmeasuresinthe\nIEcommunity,namelytherecallandprecisionmeasures[2].\nWe evaluated the table recognition and decomposition task separately and trans-\nformedtheformulaforrecallandprecisionaccordingtothetasks.Theformulaforthe\ntablerecognitiontaskisasfollows:\nnumberof correctlyidentifiedtables\nRecall=\nnumberof tablesinthedocument\nnumberof correctlyidentifiedtables\nPrecision=\nnumberof identifiedtables\nTheformulaforrecallandprecisionforthetablerecognitiontaskisasfollows:\nnumberof correctlyassigneddatacells\nRecall=\nnumberof datacellsintheoriginaltable\nnumberof correctly assigneddatacells\nPrecision=\nnumberof extracteddatacells\nTodeterminehowwellourapproachperformsonthetaskoftablerecognitionand\ndecompositionwe implementedour approach and evaluated it with several PDF files\ncontainingvarioustables.Forthatpurpose,weusedtwo testcorpora.Oneconsistsof\ndocumentswith lucid (or unsophisticated)tables and the other consists of documents\nwith complex tables. The documents do not only contain tables, but also text para-\ngraphs,graphics,etc.\nDifferentapplicationfieldsareusingdifferentkindsoftables.Butwithinaparticular\nfieldthestructureofthetablesarequitesimilar.Ifwewouldtestourapproachonsuch\nadataset,theevaluationresultswouldnotreflecttherealperformanceofourapproach.\nToovercomethisproblem,wedecidedtogenerateourtestcorporarandomlywithPDF\nfiles available on the World Wide Web. Most of the PDF files contain only one table\nandtheycamefromvariousfieldslikeresearch,sports,statistics,etc.Theyarealsonot\nrestrictedtobefromaspecificdomainorlanguage.\nTables2and3showtheevaluationresultsofourapproachforthetablerecognition\nandtabledecompositiontasks."}, {"page_number": 12, "text": "Therun-timeoftheheuristicsincreasewiththenumberofpagesin aPDFfile. In\nordertoachievefasterresultstheusershouldstartthetoolforonlythepagesofinterest.\nTable2.Evaluationresultsofthetablerecognitiontask\nAmountofsamples Recall Precision\nLucidtables 50 0.84 0.97\nComplextables 100 0.92 0.95\nTable3.Evaluationresultsofthetabledecompositiontask\nAmountofsamples Recall Precision\nLucidtables 50 0.88 0.97\nComplextables 100 0.81 0.83\n4 Related Work\nThe Information Engineering community has realized the importance of TE earlier.\nSomeapproacheshandleimagesofdocumentsasinputandthereforemerelyfocuson\nlayout components (table boundaries, cell boundaries, etc.) to detect and decompose\ntables. Other approaches, on the other hand, have to deal with unstructured or semi-\nstructured text where only little or no information about the layout is given. In such\ncases,thedeveloperstrytoextractthetablesbyusingparameterslikespacing,etc.\nWecancategorizetheexistingapproachesinthreemaincategories[8]:\n\u2013 Predefinedlayout-basedapproach:Inthisapproachthereexistseveraltemplates\nforpossibletablestructures.Theinputdocumentsarescannedandportionsthatfit\natemplateareidentifiedastables.Thelimitationisthatonecannotdefinesomany\ntemplatessothatallpossibletablestructuresarecoveredwiththem.\n\u2013 Heuristic-basedapproach:Thisapproachmakesuseofasetofrules,whichare\ncreatedtomakedecisions.\n\u2013 Statisticaloroptimization-basedapproach:Thisapproachusesstatisticalmea-\nsuresobtainedbyofflinetraining.Theestimatedparametersarethenusedfordecision-\nmaking.\nTupajandcolleagues[9]focusonexaminingadocumentimageanditscontent.In\ntheiralgorithm,firstthedocumentissegmentedandanalyzedbymeansofimagepro-\ncessingtechniquesinordertodetectpotentialtableareas.Thesepartsarethenpassed"}, {"page_number": 13, "text": "toanOCRenginethatextractsthetext.Finally,theextractedtextisanalyzedandtable\ncomponentsareisolated.Tupajandcolleaguesusedtwokindsoftablesforthetesting\nprocess(technicaltables,financialtables).Theyshowthattheirapproachgainsdifferent\nresultsforthetwokindsoftableclasses.\nNg and colleagues [10] apply Machine Learning techniques to gain a domain in-\ndependentandreliablesystem.Theydevelopedanapproachthathandlesplaintextin\nASCIIcharactersasinput.Theirlearningmethodusespurelysurfacefeatureslikethe\nrelativelocationsofcharactersinalineandacrosslines,etc.Theysplittheirtaskinto\nthreesub-tasks:recognizingtableboundary,column,androw,in thatorder.Notethat\ntheyonlyfocusondetectingtables,columns,androwsandnotonthecontent.\nRamel and colleagues[5] developeda method for detection and extraction of the\ngraphic lines. To deal also with tables with no or little graphic marks they utilize the\nregularitiesofthetextelementsalone.Theydescribetheirapproachasatop-downstudy\nofregularities,whereasfirsttheglobalconfigurationoftheblocksoftextareexamined,\nthenmorelocalcharacteristics(alignment,spacing)aretakenintoaccount,andfinally\nthelinesoftextarestudied.\nPinto and colleagues [11] presented a model of table extraction that utilizes both\ncontentandlayoutoftablesbyusingconditionalrandomfields(CRFs).CRFsareundi-\nrectedgraphmodelsthatcanbeusedto calculateconditionalprobabilityofvalueson\ndesignatedinputnodes.Pintoandcolleaguesfirstlabeleachlineofadocumentwitha\ntag(non-extractionlabel,headerlabel,datarowlabel,captionlabel).Thentheydescribe\nfeaturesusedbyaheuristictableextractor.TheyusedCRFsbecauseCRFssupportthe\nuseofmanyrichandoverlappinglayoutandlanguagefeatures.Afteratrainingphase\nthey tested their dataset and achieved good results. Though,the current state of their\nmodel can only locate labels and tag lines but knows nothing about the columns and\ncannotdistinguishbetweendatacellsandheadercells.\nAlthoughthereissomeexistingworkaboutextractionfromPDFfiles, thereisno\nspecial focus on the extraction of tables. The full version of Adobe Acrobat 2 has a\ntableextractionfeaturebutitcanonlyextractlucidtablescorrectlyandthisonlyafter\nthe user marks the table. The other existing approaches were not applicable for our\npurposes,becausetheyusetosomeextentgraphicaldelimitersfortheextraction.The\nused pdftohtml tool returns only text elements with some attributes and no graphical\ncomponentsatall.Further,wewantedtopreservegeneralityinthesenseofnotbeing\nlimitedtoaspecificdomain,language,orasetoftablemodelsetc.Thus,wedecidedto\ndevelopa heuristic-basedapproachthatworksonlywith thefew attributesofthe tool\nandnothingelse.\n5 Conclusion\nThispaperhaspresentedamethodforextractingtableinformationbyutilizingonlythe\nabsolutepositionoftextelementsinafile,concretelyinPDFfiles.Further,aprototype\nwas generated in order to evaluate the performance of the method. Experiments on\nseveralPDFdocumentswith150tablesdemonstratedourresults.\n2http://www.adobe.com"}, {"page_number": 14, "text": "Basedonourevaluationresultswecansaythatourapproachperformsverywellon\nthetablerecognitiontaskforlucidandcomplextables.Possibleerrorsareanunintended\nmergeoftwoadjacenttablesorerroneoustablesplits.\nRegardingthe table decompositiontask we can say that our approachworks very\nwellonlucidtables.Anyhow,theperformanceandrecallvaluesoncomplextablesare\nalsofairlygood.Thedifferencebetweentheseresultscamemainlyfromtheappearance\nofmulti-linecellsincomplextables.Todecidewhethertwocellshavetobemergedor\nnotrequiressomeamountofnaturallanguageunderstandingandourapproachdoesnot\nhandleanylanguage-specificfeatures.Therefore,wecanonlymakedecisionsbasedon\nthedistancebetweentwocells,whichisnotalwaysreliable.Itispossiblethattwocells\nthat have to be mergedare not mergedby the approachor that two adjacentcells are\nfalselymerged.\nOurapproachtotheextractionoftablesinPDFfiles,isdomainandlanguageinde-\npendent.Futureworkmayinvolveusingmorestatisticaltechniquesforutilizingregu-\nlaritiesintablesinordertoachievebetterresults.Suchtechniquescould,forexample,\nhelptoavoidfalse-positivesinbothofthetasks.\nReferences\n1. Miller,R.L.:Informationengineering:Abalancedapproachtoinformationsystemsrequire-\nmentsanalysisanddesign. In:ProceedingsoftheIEEENationalAerospaceandElectronics\nConference.(1995)672\u2013679\n2. Appelt,D.E.: Introductiontoinformationextraction. AICommunications12(1999)161\u2013\n172\n3. Riloff,E.: Informationextractionasasteppingstonetowardstoryunderstanding. InRam,\nA.,Moorman,K.,eds.:UnderstandingLanguageUnderstanding:ComputationalModelsof\nReading. MITPress(1999)\n4. Yildiz,B.: Informationextraction\u2013utilizingtablepatterns. Master\u2019sthesis,ViennaUniver-\nsityofTechnology(2004)\n5. Ramel,J.Y.,Crucianu,M.,Vincent,N.,Faure,C.: Detection,extractionandrepresentation\noftables. In:ProceedingsoftheSeventhInternationalConferenceonDocumentAnalysis\nandRecognition,WashingtonDC.,IEEEComputerSociety(2003)374\u2013378\n6. Lehnert, W.,Cardie,C.,Fisher,D.,McCarthy, J.,Riloff,E.,Soderland, S.: Evaluatingan\nInformationExtractionsystem.JournalofIntegratedComputer-AidedEngineering1(1994)\n7. Hu,J.,Kashi,R.,D.,L.,G.,W.: Evaluatingtheperformanceoftableprocessingalgorithms.\nInternationalJournalonDocumentAnalysisandRecognition4(2002)\n8. Wang,Y.: DocumentAnalysis:TableStructureUnderstandingandZoneContentClassifica-\ntion. PhDthesis,WashingtonUniversity(2002)\n9. Tupaj,S.,Shi,Z.,Chang,C.,Alam,H.: Extractingtabularinformationfromtextfiles. Eecs,\nTuftsUniversity,Medford(1996)\n10. Ng,H.,Lim,C.,Koo,J.: Learningtorecognizetablesinfreetext. In:Proceedingsofthe\n37thConferenceonAssociationforComputationalLinguistics.(1999)443\u2013450\n11. Pinto, D., McCallum, A., Wei, X., Bruce, W.: Table extraction using conditional random\nfields. In:Proceedingsofthe26thACMSIGIR.(2003)\nView publication stats"}]